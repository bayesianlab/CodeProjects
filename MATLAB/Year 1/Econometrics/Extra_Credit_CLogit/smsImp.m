%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/dillonflannery-valadez/Google Drive/MATLAB/Econometrics/Extra_Credit_CLogit/SMS.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/04/25 22:51:46

%% Initialize variables.
filename = '/Users/dillonflannery-valadez/Google Drive/MATLAB/Econometrics/Extra_Credit_CLogit/SMS.csv';
delimiter = ',';
startRow = 2;

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(thousandsRegExp, ',', 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
% group = cell2mat(raw(:, 1));
% survey = cell2mat(raw(:, 2));
% sp = cell2mat(raw(:, 3));
id = cell2mat(raw(:, 4));
% purpose = cell2mat(raw(:, 5));
% first = cell2mat(raw(:, 6));
% ticket = cell2mat(raw(:, 7));
% who1 = cell2mat(raw(:, 8));
% luggage = cell2mat(raw(:, 9));
% age = cell2mat(raw(:, 10));
% male = cell2mat(raw(:, 11));
% income = cell2mat(raw(:, 12));
% ga = cell2mat(raw(:, 13));
% origin = cell2mat(raw(:, 14));
% dest = cell2mat(raw(:, 15));
% TRAIN_AV = cell2mat(raw(:, 16));
% CAR_AV = cell2mat(raw(:, 17));
% SM_AV = cell2mat(raw(:, 18));
% TRAIN_TT = cell2mat(raw(:, 19));
% TRAIN_CO = cell2mat(raw(:, 20));
% TRAIN_HE = cell2mat(raw(:, 21));
% SM_TT = cell2mat(raw(:, 22));
% SM_CO = cell2mat(raw(:, 23));
% SM_HE = cell2mat(raw(:, 24));
% SM_SEATS = cell2mat(raw(:, 25));
% CAR_TT = cell2mat(raw(:, 26));
% CAR_CO = cell2mat(raw(:, 27));
choice = cell2mat(raw(:, 28));
idalt = cell2mat(raw(:, 29));
chosen = cell2mat(raw(:, 30));
traveltime = cell2mat(raw(:, 31));
travelcost = cell2mat(raw(:, 32));
train = cell2mat(raw(:, 33));
sm = cell2mat(raw(:, 34));
trainpass = cell2mat(raw(:, 35));
% type1 = cell2mat(raw(:, 36));


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me R;