CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(example)
set(CMAKE_CXX_STANDARD 11)
set( CMAKE_EXPORT_COMPILE_COMMANDS ON )
cmake_policy(SET CMP0042 NEW)
get_filename_component(PARENT ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)
set(BOOST_ROOT "/usr/local/include/boost_1_66_0/")
set(EIGEN_DIR "/usr/local/include/eigen3/" )
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
set(PYTHON_INCLUDE_DIRS "//anaconda/include/python2.7")
set(PYTHON_LIBRARY "//anaconda/lib/libpython2.7.dylib")
find_package(Boost 1.66.0 COMPONENTS python)
if(Boost_FOUND)
	include_directories(${Boost_INCLUDE_DIRS} ${EIGEN_DIR} ${PYTHON_INCLUDE_DIRS} include)
	message(STATUS ${PYTHON_LIBRARY})
	add_library (yay MODULE src/example_ext.cpp)
	target_link_libraries(yay ${Boost_LIBRARIES} ${PYTHON_LIBRARY})
endif()
install(TARGETS yay DESTINATION "/usr/local/lib")
#PROJECT(example)
#set(CMAKE_CXX_STANDARD 11)
#set( CMAKE_EXPORT_COMPILE_COMMANDS ON )
#cmake_policy(SET CMP0042 NEW)
#set(EIGEN_DIR "/usr/local/include/eigen3/" )
#find_package(Boost 1.66.0 COMPONENTS python3)
#if(Boost_FOUND)
#	set(Boost_USE_STATIC_LIBS OFF)
#	set(Boost_USE_MULTITHREADED ON)
#	set(Boost_USE_STATIC_RUNTIME OFF)
#	find_package(PythonLibs REQUIRED)
#	include_directories(${Boost_INCLUDE_DIRS} ${EIGEN_DIR} ${PYTHON_INCLUDE_DIRS} include)
#	add_library (yay SHARED src/example_ext.cpp)
#	target_link_libraries(yay ${Boost_LIBRARIES} ${PYTHON_LIBRARY})
#endif()




