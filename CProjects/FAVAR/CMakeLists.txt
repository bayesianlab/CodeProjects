cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
project(multilevel)
set(CMAKE_CXX_STANDARD 11)
#  set(CMAKE_BUILD_TYPE DEBUG)
 set(CMAKE_BUILD_TYPE RELEASE)
 set(CMAKE_CXX_FLAGS_REALEASE "-O3 -march=native -mfpmath=sse -funroll-loops -fopenmp -DNDEBUG -ffast-math -j")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
# add_compile_options(-Wall -Wextra -pedantic)
find_program(CCACHE_FOUND ccache)
if(CCACHE_FOUND)
  message(STATUS "Found CCACHE")
  set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
  set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache) 
  set(CMAKE_CXX_COMPILER_LAUNCHER ccache)
endif(CCACHE_FOUND)

find_package(Eigen3)
if (${EIGEN3_FOUND})
  include_directories(${EIGEN3_INCLUDE_DIR})
else()
  message(STATUS "Eigen3 not found")
endif()
find_package(Boost REQUIRED COMPONENTS filesystem)
if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  message(STATUS "Found boost headers")
endif(Boost_FOUND)

set(plotsrc ${PROJECT_SOURCE_DIR}/../GnuPlotting/src/Plotter.cpp)
set(distsrc ${PROJECT_SOURCE_DIR}/../Distributions/src/Distributions.cpp)
set(et ${PROJECT_SOURCE_DIR}/../EigenTools/src/EigenTools.cpp)
add_library(et STATIC ${et})
add_library(basetools STATIC ${plotsrc} )
add_library(di STATIC ${distsrc} )
set(plotinclude ${PROJECT_SOURCE_DIR}/../GnuPlotting/include)
set(distinclude ${PROJECT_SOURCE_DIR}/../Distributions/include)
set(etinclude ${PROJECT_SOURCE_DIR}/../EigenTools/include)
include_directories(${plotinclude} "/usr/local/include/stats-master/include" "/usr/local/include/gcem/include" ${distinclude} ${etinclude} "include")

add_executable(favar src/test_favar.cpp)
target_link_libraries(favar PUBLIC basetools di) 